{"name":"django doberman","tagline":"Django app that locks out users after too many failed login attempts ","body":"![doberman](https://raw.githubusercontent.com/nicchub/django-doberman/master/images/DjangoDoberman.png).\r\n\r\n![pypi](https://img.shields.io/pypi/v/django-doberman.svg)\r\n![travis](https://travis-ci.org/django-py/django-doberman.svg?branch=master)\r\n![shield](https://img.shields.io/pypi/dm/django-doberman.svg)\r\n\r\n\r\n### Requirements\r\n- Python => 2.7\r\n- Django => 1.7\r\n\r\n### Installation\r\n\r\n1. You can install the latest stable package running this command:\r\n```\r\n    $ pip install django-doberman\r\n```\r\nAlso you can install the development version running this command::\r\n\r\n```\r\n    $ pip install -e git+http://github.com/nicchub/django-doberman.git#egg=django_doberman-dev\r\n```\r\n2. Add ``doberman`` to ``INSTALLED_APPS`` in your Django settings file\r\n\r\n```\r\n    INSTALLED_APPS = (\r\n        ...\r\n\r\n    'django.contrib.messages',\r\n\r\n    'django.contrib.admin',\r\n        ...\r\n\r\n    'doberman',\r\n)\r\n```\r\n\r\n3. ./manage.py migrate doberman || or sync your database\r\n\r\n\r\n### Development\r\nYou can contribute to this project forking it from github and sending pull requests.\r\n\r\n### Running tests\r\nTests can be run, after you clone the repository and having django installed, like::\r\n\r\n```\r\n    PYTHONPATH=$PYTHONPATH:$PWD django-admin.py test doberman --settings=doberman.tests.test_settings\r\n```\r\n\r\n### Doberman options\r\n\r\nDOBERMAN_MAX_FAILED_ATTEMPTS\r\n```\r\n    Default: ``10``.\r\n\r\n    Number of max failed login attempt.\r\n```\r\n\r\nDOBERMAN_LOCKOUT_TIME\r\n```\r\n    Default: ``600`` (10 minutes).\r\n\r\n    Number of seconds after the failed login attempts are forgotten in seconds.\r\n```\r\n\r\nDOBERMAN_REAL_IP_ONLY\r\n```\r\n    'Default': True\r\n\r\n    Set to False if you are working on localhost or a development environment.\r\n```\r\nDOBERMAN_LOGIN_FORGOTTEN_SECONDS\r\n```\r\n    Default: ``300``\r\n\r\n    Timeout forgotten login attempts of user.\r\n```\r\nDOBERMAN_USERNAME_FORM_FIELD\r\n```\r\n    Default: 'username'\r\n\r\n    Field username form field, change when you are use a diferent \"username\", for example: 'email'.\r\n```\r\nDOBERMAN_LOCKOUT_TEMPLATE\r\n```\r\n    Path to alternative lockout template.\r\n```\r\nDOBERMAN_MODEL\r\n```\r\n    Default: 'doberman.FailedAccessAttempt'\r\n\r\n    Allow to use a custom Model for tracking failed Access Attempts.\r\n```\r\nDOBERMAN_IP_META_PRECEDENCE_ORDER\r\n```\r\n    Default: (\r\n\r\n    'HTTP_X_FORWARDED_FOR',  # X-Forwarded-For: client, proxy1, proxy2\r\n\r\n    'HTTP_CLIENT_IP',\r\n\r\n    'HTTP_X_REAL_IP',\r\n\r\n    'HTTP_X_FORWARDED',\r\n\r\n    'HTTP_X_CLUSTER_CLIENT_IP',\r\n\r\n    'HTTP_FORWARDED_FOR',\r\n\r\n    'HTTP_FORWARDED',\r\n\r\n    'HTTP_VIA',\r\n\r\n    'REMOTE_ADDR',\r\n\r\n    )\r\n\r\n    This used for discovery the real IP, you can change the precedence order.\r\n```\r\n\r\n\r\n### Usage\r\n\r\nAdd ``doberman.decorators.watch_login`` decorator to your login view. Example::\r\n\r\n```\r\n    class LoginView(FormView):\r\n        template_name = 'example/login.html'\r\n        form_class = AuthenticationForm\r\n\r\n        @method_decorator(watch_login)\r\n        def dispatch(self, request, *args, **kwargs):\r\n            if request.user.is_authenticated():\r\n                return redirect(settings.LOGIN_REDIRECT_URL)\r\n            return super(LoginView, self).dispatch(request, *args, **kwargs)\r\n\r\n        def form_valid(self, form):\r\n            user = form.get_user()\r\n            login(self.request, user)\r\n            return super(LoginView, self).form_valid(form)\r\n\r\n        def get_success_url(self):\r\n            return reverse('logged_in')\r\n```\r\n\r\n### Authors and Contributors\r\n- @nicchub | http://nicolasmendoza.org/\r\n","google":"UA-63313841-1","note":"Don't delete this file! It's used internally to help with page regeneration."}